load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_binary")
load("@io_bazel_rules_docker//docker:docker.bzl", "docker_push")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "",
    visibility = ["//visibility:private"],
    deps = [
        "//github.com/golang/glog:go_default_library",
        "//github.com/gorilla/mux:go_default_library",
        "//github.com/prometheus/client_golang/prometheus:go_default_library",
        "//github.com/prometheus/client_golang/prometheus/promhttp:go_default_library",
        "//k8s.io/api/core/v1:go_default_library",
        "//k8s.io/apimachinery/pkg/api/resource:go_default_library",
        "//k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//k8s.io/apimachinery/pkg/labels:go_default_library",
        "//k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//k8s.io/apimachinery/pkg/util/intstr:go_default_library",
        "//k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//k8s.io/apimachinery/pkg/watch:go_default_library",
        "//k8s.io/client-go/kubernetes:go_default_library",
        "//k8s.io/client-go/listers/core/v1:go_default_library",
        "//k8s.io/client-go/rest:go_default_library",
        "//k8s.io/client-go/tools/cache:go_default_library",
        "//k8s.io/client-go/tools/clientcmd:go_default_library",
    ],
)

go_binary(
    name = "operator",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    importpath = "github.com/dotmesh-io/dotmesh/cmd/operator",
    pure = "on",
    visibility = ["//visibility:public"],
    x_defs = {
        "main.DOTMESH_VERSION": "{STABLE_VERSION}",
        "main.DOTMESH_IMAGE": "{STABLE_CI_DOCKER_SERVER_IMAGE}",
    },
)

# have to use container image in order to get the timestamping
container_image(
    name = "operator-img",
    base = "@go_base//image",
    entrypoint = ["/operator"],
    files = [
        ":operator",
    ],
    stamp = True,
    visibility = ["//visibility:public"],
)

docker_push(
    name = "operator_push",
    image = ":operator",
    registry = "{CI_REGISTRY}",
    repository = "{CI_REPOSITORY}/dotmesh-operator",
    stamp = True,
    tag = "{DOCKERTAG}",
)
