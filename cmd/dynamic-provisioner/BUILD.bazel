load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_binary")
load("@io_bazel_rules_docker//docker:docker.bzl", "docker_push")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")

go_library(
    name = "go_default_library",
    srcs = ["dm-provisioner.go"],
    importpath = "",
    visibility = ["//visibility:private"],
    deps = [
        "//github.com/golang/glog:go_default_library",
        "//github.com/kubernetes-incubator/external-storage/lib/controller:go_default_library",
        "//k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//k8s.io/client-go/kubernetes:go_default_library",
        "//k8s.io/client-go/pkg/api/v1:go_default_library",
        "//k8s.io/client-go/rest:go_default_library",
    ],
)

go_binary(
    name = "dynamic-provisioner",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    importpath = "github.com/dotmesh-io/dotmesh/cmd/dynamic-provisioner",
    pure = "on",
    visibility = ["//visibility:public"],
)

container_image(
    name = "provisioner-img",
    base = "@go_base//image",
    cmd = ["/dynamic-provisioner"],
    directory = "/",
    files = [
        ":dynamic-provisioner",
    ],
    stamp = True,
    visibility = ["//visibility:public"],
)

docker_push(
    name = "provisioner_push",
    image = ":dynamic-provisioner",
    registry = "{CI_REGISTRY}",
    repository = "{CI_REPOSITORY}/dotmesh-dynamic-provisioner",
    stamp = 1,
    tag = "{DOCKERTAG}",
)
